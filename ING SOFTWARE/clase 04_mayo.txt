github
integración continua
test unitario
----


Clase 04 de mayo
PATRONES DE ARQUITECTURA
Cómo se organiza y organiza los componentes.
Y cuáles son las ventajas de cada uno

PATRONES DE DISEÑO
Tiene que ver con reutilización
Solución común a problema común

sirve para dar
Mantenibilidad: estabilidad, confiabilidad, solidez le da al proyecto
Simpleza
Continuidad
Se comprende
Debe ser sostenible a largo plazo
--------
PATRONES DE ARQUITECTURA DE SOFTWARE
Es critica para el desarrollo del proyecto
determina como desarrollamos, y como hacemos conexión entre requerimientos.
Como se implementa y cómo va a estar regido.
Rige el comportamiento y camapidad de los sistemas.
Como van a ser las capacidades que tenga a lo largo del menetmiennto, rendimiento. Cómo va a funcionar el sistema.

DISEÑO DE LA ARQUITECTURA
Permite observar la organización y el diseño de la estructura general del software
Diseño de la arquitectura conviene en ETAPAS TEMPRANAS
Dps de la definición de Requerimientos

Se debe elegir dependiendo los requerimientos funcionales y no funcionles 

Un diseño donde se tiene los patrones en cuenta,
Es mucho mas facil mantener, editar

Un diseño mejor diseñado, a lo largo del tiempo genera menos costos

ELECCION DEPENTE:  REQUERIMIENTOS NO FUNCIONALES:
Rendimiento
Seguridad
Protección
Disponibilidad
Mantenibilidad

VISTAS de Arquitectura
*Vista lógica
*Vista de procesos
*Vosta de desarrollo
*Vista física

ARQUITECTURA DE CAPAS
Cada capaz realiza tareas diferentes
se pueden hacer cambios en todo una capaz mientras se mantengan 
la interfaz intacta

ARQUITECTURA: CLIENTE SERVIDOR
Conjunto de cliente
Conjunto de servidores
cada servicio mantenido por servidor separado
Es más suceptible a Problemas de conexion de red, DENEGACION DE SERVICIO.
Depende de la calidad de la conexion de la red
*Balanceador de cargars que distribuye el pedido a diferentes servidores para no sobrecargar
*CDN: Duplica los recursos mas pedidos, evitar latencia
Content Delivery Network

MODELO DE MICROSERVICIOS
se tiende hoy día
Divide en servicios más pequeños e independientes, se comunican a través de protocolos ligeros (HTTP, HTTPS).

PIPE & FILTER
Se usan en sistemas operativos
Una tuberia donde se va transformando datos en distintas estaciones(FILTROS).
Ejemplo tenerlos en una cadena de montaje y que vaya transformandose un producto.
Desventaja: cada flujo tiene un diseño específico

otros modelos:
MODELO DE REPOSITORIOS

******
No hubo clases 11 de mayo
******
